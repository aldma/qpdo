#ifndef QPDO_H
#define QPDO_H

#include "types.h"
#include "global_opts.h"

/*************************************************************************
 * MAIN SOLVER API
 *************************************************************************/

/*************************************************************************
 * QPDO_SET_DEFAULT_SETTINGS
 *************************************************************************/
void qpdo_set_default_settings(QPDOSettings *settings);

/*************************************************************************
 * QPDO_SETUP
 *************************************************************************/
QPDOWorkspace* qpdo_setup(const QPDOData     *data,
                            const QPDOSettings *settings);

/*************************************************************************
 * QPDO_WARM_START
 *************************************************************************/
void qpdo_warm_start(QPDOWorkspace *work, 
                      c_float        *x_warm_start, 
                      c_float        *y_warm_start);

/*************************************************************************
 * QPDO_SOLVE
 *************************************************************************/
void qpdo_solve(QPDOWorkspace *work);

/*************************************************************************
 * QPDO_UPDATE_SETTINGS
 *************************************************************************/
void qpdo_update_settings(QPDOWorkspace      *work, 
                           const QPDOSettings *settings);

/*************************************************************************
 * QPDO_UPDATE_BOUNDS
 *************************************************************************/
void qpdo_update_bounds(QPDOWorkspace *work,
                         const c_float  *bmin, 
                         const c_float  *bmax);

/*************************************************************************
 * QPDO_UPDATE_Q
 *************************************************************************/
void qpdo_update_q(QPDOWorkspace *work, const c_float *q);


/*************************************************************************
 * QPDO_CLEANUP
 *************************************************************************/
void qpdo_cleanup(QPDOWorkspace *work);

#endif
